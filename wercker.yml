box: golang:1.9

dev:
  steps:
    - internal/shell

build:
  base-path: "/go/src/github.com/oracle/oci-volume-provisioner"
  steps:
    - script:
      name: write VERSION.txt
      code: |
        git describe --always --dirty > ${WERCKER_OUTPUT_DIR}/VERSION.txt
        cat ${WERCKER_OUTPUT_DIR}/VERSION.txt

    - script:
      name: validate source code
      code: |
        go get -u github.com/golang/lint/golint
        make gofmt golint govet

    - script:
      name: run unit tests
      code: make test

    - script:
      name: build
      code: make build

    - script:
      name: copy build artifacts
      code: |
        cp -R dist ${WERCKER_OUTPUT_DIR}/

    - script:
      name: copy test artifacts
      code: |
        cp -R manifests ${WERCKER_OUTPUT_DIR}/
        mkdir -p ${WERCKER_OUTPUT_DIR}/test
        cp -R test/system ${WERCKER_OUTPUT_DIR}/test/

push:
  box:
    id: oraclelinux:7.3
  steps:
    - script:
      name: set ENV vars
      code: |
        export VERSION=$(cat VERSION.txt)
        echo "Pushing version ${VERSION}"

    - script:
      name: prepare
      code: |
        mv ./dist/oci-volume-provisioner /oci-volume-provisioner
        chmod +x /oci-volume-provisioner

    - internal/docker-push:
      repository: wcr.io/oracle/oci-volume-provisioner
      tag: $VERSION
      entrypoint: /oci-volume-provisioner
      user: 65534 # nobody

system-test:
  box:
    id: wcr.io/oracle/oci-volume-provisioner-system-test:1.0.0
    registry: wcr.io
    username: $DOCKER_REGISTRY_USERNAME
    password: $DOCKER_REGISTRY_PASSWORD
  steps:
    - script:
        name: system test
        code: |
          cd test/system
          ./runner.py
